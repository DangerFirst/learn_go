syntax = "proto3";
option go_package ="./";
package apis;

service RankService {
  rpc Register(PersonalInformation) returns (PersonalInformation){}
  rpc Update(PersonalInformation) returns (PersonalInformationFatRate){}
  rpc GetFatRate(PersonalInformation) returns (PersonalRank){}
  rpc GetTop(null) returns (PersonalRanks){}

  rpc RegisterPersons(stream PersonalInformation) returns (PersonalInformationList){}
  rpc WatchPersons(null)returns (stream PersonalInformation){}
}

message null {}

message PersonalRanks {
  repeated PersonalRank personalRanks = 1;
}

message PersonalRank{
  string name = 1;
  string sex = 2;
  int64 rankNumber = 3;
  float fatRate = 4;
}

message PersonalInformationFatRate {
  string name = 1 ;
  float fatRate = 2;
}

message PersonalInformationList {
  repeated PersonalInformation items = 1;
}

message PersonalInformation {
  // @gotags: gorm:"primaryKey;column:id"
  int64 id = 1;
  // @gotags: gorm:"column:name"
  string name = 2;
  // @gotags: gorm:"column:sex"
  string sex = 3;
  // @gotags: gorm:"column:tall"
  float  tall = 4;
  // @gotags: gorm:"column:weight"
  float weight = 5;
  // @gotags: gorm:"column:age"
  int64 age = 6;
}

message PersonalShow{
  // @gotags: gorm:"primaryKey;column:id"
  int64 id = 1;
  // @gotags: gorm:"primaryKey;column:personal_id"
  int64 personalId = 2;
  // @gotags: gorm:"column:personal_name"
  string personalName = 3;
  // @gotags: gorm:"column:show_description"
  string showDescription = 4;
  // @gotags: gorm:"column:show_time"
  string showTime = 5;
  // @gotags: gorm:"column:by_time_age"
  int64 byTimeAge = 6;
  // @gotags: gorm:"column:by_time_tall"
  float byTimeTall = 7;
  // @gotags: gorm:"column:by_time_weight"
  float byTimeWeight =8;
  // @gotags: gorm:"column:by_time_fatrate"
  float byTimeFatRate =9;
  // @gotags: gorm:"column:is_deleted"
  int64 isDeleted =10;
    }

message goMoments{
  string name = 1;
  string showDescription = 2;
  string showTime = 3;
}